# 786

import sys

def is_cpg(s, c, g) -> tuple[int, int]:
   match s:
      case s'C...': return is_cpg(s[1:], c + 1, g)
      case s'G...': return is_cpg(s[1:], c, g + 1)
      default: return c, g

def cpgs(s):
   i = 0
   while i < len(s):
      c, g = is_cpg(s[i:], 0, 0)
      if c and g: 
         yield c + g
      i += c + g + 1

cnt, m, M = 0, 99999, 0
def collect(c):
   global cnt, m, M
   cnt += 1
   m = min(m, c)
   M = max(M, c)

(seqs(sys.argv[1]) 
 |> cpgs
 |> collect)
print cnt, m, M
